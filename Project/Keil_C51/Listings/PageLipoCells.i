
#line 1 "..\..\SrcCode\Middle\Gui\Page\PageLipoCells.c" /0
  
#line 1 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
 
 
 
  
#line 1 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
 
 
  
#line 1 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /0
 
 
 
  
#line 1 "..\..\SdkTool\Si8051Base\Stdint.h" /0




 
 
 
 
 
 
 
 typedef bit bool;
 typedef enum{ false = 0, true = !false }BoolDef, BoolTypeDef;
 
 typedef unsigned char			uint8_t;
 typedef unsigned short 		uint16_t;
 typedef unsigned long 		uint32_t;
 typedef uint32_t 					uint64_t[2];
 
 typedef signed char 			sint8_t;
 typedef short 						sint16_t;
 typedef long 							sint32_t;
 typedef long 							sint64_t[2];
 
 typedef signed char 			int8_t;
 typedef short 						int16_t;
 typedef long 							int32_t;
 typedef long 					    int64_t[2];
 
 
 
 
#line 4 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /0
 
  
#line 1 "..\..\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Register_Enums.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
#line 1 "\PgmCard\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Defs.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
#line 1 "..\..\SdkTool\Si8051Base\si_toolchain.h" /0




 
 
 
 
 
  
#line 1 "..\..\SdkTool\Si8051Base\stdint.h" /0




 
 
 
#line 8 "..\..\SdkTool\Si8051Base\stdint.h" /1
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 10 "..\..\SdkTool\Si8051Base\si_toolchain.h" /0
#line 10 "..\..\SdkTool\Si8051Base\si_toolchain.h" /0
 
 





















































 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 









 
 
 










 
 
 










 
 
 
 













 
 
 



















 
 

 














 
 
 


















 
 
 






































 
 

 
















 
 

 





























 
 
 



























 
 

 






























 
 

 





























 
 
 





























 
 

 
 
#line 440 "..\..\SdkTool\Si8051Base\si_toolchain.h" /1
  
  
  
  
 
  
  
 
 
  
  
  
  
  
 
#line 455 "..\..\SdkTool\Si8051Base\si_toolchain.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 typedef union SI_UU16{
 uint16_t u16;    
 int16_t s16;     
 uint8_t u8[2];   
 int8_t s8[2];    
 } SI_UU16_t;
 
 
 
 
 typedef union SI_UU32{
 uint32_t u32;        
 int32_t s32;         
 SI_UU16_t uu16[2];   
 uint16_t u16[2];     
 int16_t s16[2];      
 uint8_t u8[4];       
 int8_t s8[4];        
 } SI_UU32_t;
 
 
 
 
 
 
 
 
 
 
 
 typedef struct{
 uint8_t memtype;     
 SI_UU16_t address;   
 } GPTR_t;
 
 
 
 
 typedef union SI_GEN_PTR{
 uint8_t u8[3];     
 GPTR_t gptr;       
 } SI_GEN_PTR_t;
 
 
 extern void _nop_(void);
 
 
 
 
 
 
 
 
#line 521 "..\..\SdkTool\Si8051Base\si_toolchain.h" /1
 
 
 
  
  
  
  
  
  
  
 
 
 
 
  
  
  
 
 
 
  
  
  
  
  

  

  
  

  

  
  

 
  
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
#line 596 "..\..\SdkTool\Si8051Base\si_toolchain.h" /0
 
 
 
 
#line 20 "\PgmCard\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Defs.h" /0
 
 
 
 
 
  sfr ACC = 0xE0;  
  sfr ADC0CF = 0xBC;  
  sfr ADC0CN0 = 0xE8;  
  sfr ADC0GTH = 0xC4;  
  sfr ADC0GTL = 0xC3;  
  sfr ADC0H = 0xBE;  
  sfr ADC0L = 0xBD;  
  sfr ADC0LTH = 0xC6;  
  sfr ADC0LTL = 0xC5;  
  sfr AMX0N = 0xBA;  
  sfr AMX0P = 0xBB;  
  sfr B = 0xF0;  
  sfr CKCON0 = 0x8E;  
  sfr CKCON1 = 0xE4;  
  sfr CLKSEL = 0xA9;  
  sfr CMP0CN0 = 0x9B;  
  sfr CMP0MD = 0x9D;  
  sfr CMP0MX = 0x9F;  
  sfr CMP1CN0 = 0x9A;  
  sfr CMP1MD = 0x9C;  
  sfr CMP1MX = 0x9E;  
  sfr DPH = 0x83;  
  sfr DPL = 0x82;  
  sfr EIE1 = 0xE6;  
  sfr EIE2 = 0xE7;  
  sfr EIP1 = 0xF6;  
  sfr EIP2 = 0xF7;  
  sfr EMI0CF = 0x85;  
  sfr EMI0CN = 0xAA;  
  sfr EMI0TC = 0x84;  
  sfr FLKEY = 0xB7;  
  sfr FLSCL = 0xB6;  
  sfr HFO0CAL = 0xB3;  
  sfr HFO0CN = 0xB2;  
  sfr IE = 0xA8;  
  sfr IP = 0xB8;  
  sfr IT01CF = 0xE4;  
  sfr LFO0CN = 0x86;  
  sfr P0 = 0x80;  
  sfr P0MDIN = 0xF1;  
  sfr P0MDOUT = 0xA4;  
  sfr P0SKIP = 0xD4;  
  sfr P1 = 0x90;  
  sfr P1MDIN = 0xF2;  
  sfr P1MDOUT = 0xA5;  
  sfr P1SKIP = 0xD5;  
  sfr P2 = 0xA0;  
  sfr P2MDIN = 0xF3;  
  sfr P2MDOUT = 0xA6;  
  sfr P2SKIP = 0xD6;  
  sfr P3 = 0xB0;  
  sfr P3MDIN = 0xF4;  
  sfr P3MDOUT = 0xA7;  
  sfr P3SKIP = 0xDF;  
  sfr P4 = 0xC7;  
  sfr P4MDIN = 0xF5;  
  sfr P4MDOUT = 0xAE;  
  sfr PCA0CN0 = 0xD8;  
  sfr PCA0CPH0 = 0xFC;  
  sfr PCA0CPH1 = 0xEA;  
  sfr PCA0CPH2 = 0xEC;  
  sfr PCA0CPH3 = 0xEE;  
  sfr PCA0CPH4 = 0xFE;  
  sfr PCA0CPL0 = 0xFB;  
  sfr PCA0CPL1 = 0xE9;  
  sfr PCA0CPL2 = 0xEB;  
  sfr PCA0CPL3 = 0xED;  
  sfr PCA0CPL4 = 0xFD;  
  sfr PCA0CPM0 = 0xDA;  
  sfr PCA0CPM1 = 0xDB;  
  sfr PCA0CPM2 = 0xDC;  
  sfr PCA0CPM3 = 0xDD;  
  sfr PCA0CPM4 = 0xDE;  
  sfr PCA0H = 0xFA;  
  sfr PCA0L = 0xF9;  
  sfr PCA0MD = 0xD9;  
  sfr PCON0 = 0x87;  
  sfr PFE0CN = 0xAF;  
  sfr PSCTL = 0x8F;  
  sfr PSW = 0xD0;  
  sfr REF0CN = 0xD1;  
  sfr REG01CN = 0xC9;  
  sfr RSTSRC = 0xEF;  
  sfr SBCON1 = 0xAC;  
  sfr SBRLH1 = 0xB5;  
  sfr SBRLL1 = 0xB4;  
  sfr SBUF0 = 0x99;  
  sfr SBUF1 = 0xD3;  
  sfr SCON0 = 0x98;  
  sfr SCON1 = 0xD2;  
  sfr SFRPAGE = 0xBF;  
  sfr SMB0ADM = 0xCE;  
  sfr SMB0ADR = 0xCF;  
  sfr SMB0CF = 0xC1;  
  sfr SMB0CN0 = 0xC0;  
  sfr SMB0DAT = 0xC2;  
  sfr SMB1ADM = 0xCE;  
  sfr SMB1ADR = 0xCF;  
  sfr SMB1CF = 0xC1;  
  sfr SMB1CN0 = 0xC0;  
  sfr SMB1DAT = 0xC2;  
  sfr SMBTC = 0xB9;  
  sfr SMOD1 = 0xE5;  
  sfr SP = 0x81;  
  sfr SPI0CFG = 0xA1;  
  sfr SPI0CKR = 0xA2;  
  sfr SPI0CN0 = 0xF8;  
  sfr SPI0DAT = 0xA3;  
  sfr TCON = 0x88;  
  sfr TH0 = 0x8C;  
  sfr TH1 = 0x8D;  
  sfr TL0 = 0x8A;  
  sfr TL1 = 0x8B;  
  sfr TMOD = 0x89;  
  sfr TMR2CN0 = 0xC8;  
  sfr TMR2H = 0xCD;  
  sfr TMR2L = 0xCC;  
  sfr TMR2RLH = 0xCB;  
  sfr TMR2RLL = 0xCA;  
  sfr TMR3CN0 = 0x91;  
  sfr TMR3H = 0x95;  
  sfr TMR3L = 0x94;  
  sfr TMR3RLH = 0x93;  
  sfr TMR3RLL = 0x92;  
  sfr TMR4CN0 = 0x91;  
  sfr TMR4H = 0x95;  
  sfr TMR4L = 0x94;  
  sfr TMR4RLH = 0x93;  
  sfr TMR4RLL = 0x92;  
  sfr TMR5CN0 = 0xC8;  
  sfr TMR5H = 0xCD;  
  sfr TMR5L = 0xCC;  
  sfr TMR5RLH = 0xCB;  
  sfr TMR5RLL = 0xCA;  
  sfr USB0ADR = 0x96;  
  sfr USB0DAT = 0x97;  
  sfr USB0XCN = 0xD7;  
  sfr VDM0CN = 0xFF;  
  sfr XBR0 = 0xE1;  
  sfr XBR1 = 0xE2;  
  sfr XBR2 = 0xE3;  
  sfr XOSC0CN = 0xB1;  
 
 
 
 
  sfr16 ADC0GT = 0xC3;  
  sfr16 ADC0 = 0xBD;  
  sfr16 ADC0LT = 0xC5;  
  sfr16 DP = 0x82;  
  sfr16 PCA0CP0 = 0xFB;  
  sfr16 PCA0CP1 = 0xE9;  
  sfr16 PCA0CP2 = 0xEB;  
  sfr16 PCA0CP3 = 0xED;  
  sfr16 PCA0CP4 = 0xFD;  
  sfr16 PCA0 = 0xF9;  
  sfr16 SBRL1 = 0xB4;  
  sfr16 TMR2 = 0xCC;  
  sfr16 TMR2RL = 0xCA;  
  sfr16 TMR3 = 0x94;  
  sfr16 TMR3RL = 0x92;  
  sfr16 TMR4 = 0x94;  
  sfr16 TMR4RL = 0x92;  
  sfr16 TMR5 = 0xCC;  
  sfr16 TMR5RL = 0xCA;  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  sbit ACC_ACC0 = 0xE0^0;  
  sbit ACC_ACC1 = 0xE0^1;  
  sbit ACC_ACC2 = 0xE0^2;  
  sbit ACC_ACC3 = 0xE0^3;  
  sbit ACC_ACC4 = 0xE0^4;  
  sbit ACC_ACC5 = 0xE0^5;  
  sbit ACC_ACC6 = 0xE0^6;  
  sbit ACC_ACC7 = 0xE0^7;  
 
 
 
  sbit ADC0CN0_ADCM0 = 0xE8^0;  
  sbit ADC0CN0_ADCM1 = 0xE8^1;  
  sbit ADC0CN0_ADCM2 = 0xE8^2;  
  sbit ADC0CN0_ADWINT = 0xE8^3;  
  sbit ADC0CN0_ADBUSY = 0xE8^4;  
  sbit ADC0CN0_ADINT = 0xE8^5;  
  sbit ADC0CN0_ADTM = 0xE8^6;  
  sbit ADC0CN0_ADEN = 0xE8^7;  
 
 
 
  sbit B_B0 = 0xF0^0;  
  sbit B_B1 = 0xF0^1;  
  sbit B_B2 = 0xF0^2;  
  sbit B_B3 = 0xF0^3;  
  sbit B_B4 = 0xF0^4;  
  sbit B_B5 = 0xF0^5;  
  sbit B_B6 = 0xF0^6;  
  sbit B_B7 = 0xF0^7;  
 
 
 
  sbit IE_EX0 = 0xA8^0;  
  sbit IE_ET0 = 0xA8^1;  
  sbit IE_EX1 = 0xA8^2;  
  sbit IE_ET1 = 0xA8^3;  
  sbit IE_ES0 = 0xA8^4;  
  sbit IE_ET2 = 0xA8^5;  
  sbit IE_ESPI0 = 0xA8^6;  
  sbit IE_EA = 0xA8^7;  
 
 
 
  sbit IP_PX0 = 0xB8^0;  
  sbit IP_PT0 = 0xB8^1;  
  sbit IP_PX1 = 0xB8^2;  
  sbit IP_PT1 = 0xB8^3;  
  sbit IP_PS0 = 0xB8^4;  
  sbit IP_PT2 = 0xB8^5;  
  sbit IP_PSPI0 = 0xB8^6;  
 
 
 
  sbit P0_B0 = 0x80^0;  
  sbit P0_B1 = 0x80^1;  
  sbit P0_B2 = 0x80^2;  
  sbit P0_B3 = 0x80^3;  
  sbit P0_B4 = 0x80^4;  
  sbit P0_B5 = 0x80^5;  
  sbit P0_B6 = 0x80^6;  
  sbit P0_B7 = 0x80^7;  
 
 
 
  sbit P1_B0 = 0x90^0;  
  sbit P1_B1 = 0x90^1;  
  sbit P1_B2 = 0x90^2;  
  sbit P1_B3 = 0x90^3;  
  sbit P1_B4 = 0x90^4;  
  sbit P1_B5 = 0x90^5;  
  sbit P1_B6 = 0x90^6;  
  sbit P1_B7 = 0x90^7;  
 
 
 
  sbit P2_B0 = 0xA0^0;  
  sbit P2_B1 = 0xA0^1;  
  sbit P2_B2 = 0xA0^2;  
  sbit P2_B3 = 0xA0^3;  
  sbit P2_B4 = 0xA0^4;  
  sbit P2_B5 = 0xA0^5;  
  sbit P2_B6 = 0xA0^6;  
  sbit P2_B7 = 0xA0^7;  
 
 
 
  sbit P3_B0 = 0xB0^0;  
  sbit P3_B1 = 0xB0^1;  
  sbit P3_B2 = 0xB0^2;  
  sbit P3_B3 = 0xB0^3;  
  sbit P3_B4 = 0xB0^4;  
  sbit P3_B5 = 0xB0^5;  
  sbit P3_B6 = 0xB0^6;  
  sbit P3_B7 = 0xB0^7;  
 
 
 
  sbit PCA0CN0_CCF0 = 0xD8^0;  
  sbit PCA0CN0_CCF1 = 0xD8^1;  
  sbit PCA0CN0_CCF2 = 0xD8^2;  
  sbit PCA0CN0_CCF3 = 0xD8^3;  
  sbit PCA0CN0_CCF4 = 0xD8^4;  
  sbit PCA0CN0_CR = 0xD8^6;  
  sbit PCA0CN0_CF = 0xD8^7;  
 
 
 
  sbit PSW_PARITY = 0xD0^0;  
  sbit PSW_F1 = 0xD0^1;  
  sbit PSW_OV = 0xD0^2;  
  sbit PSW_RS0 = 0xD0^3;  
  sbit PSW_RS1 = 0xD0^4;  
  sbit PSW_F0 = 0xD0^5;  
  sbit PSW_AC = 0xD0^6;  
  sbit PSW_CY = 0xD0^7;  
 
 
 
  sbit SCON0_RI = 0x98^0;  
  sbit SCON0_TI = 0x98^1;  
  sbit SCON0_RB8 = 0x98^2;  
  sbit SCON0_TB8 = 0x98^3;  
  sbit SCON0_REN = 0x98^4;  
  sbit SCON0_MCE = 0x98^5;  
  sbit SCON0_SMODE = 0x98^7;  
 
 
 
  sbit SMB0CN0_SI = 0xC0^0;  
  sbit SMB0CN0_ACK = 0xC0^1;  
  sbit SMB0CN0_ARBLOST = 0xC0^2;  
  sbit SMB0CN0_ACKRQ = 0xC0^3;  
  sbit SMB0CN0_STO = 0xC0^4;  
  sbit SMB0CN0_STA = 0xC0^5;  
  sbit SMB0CN0_TXMODE = 0xC0^6;  
  sbit SMB0CN0_MASTER = 0xC0^7;  
 
 
 
  sbit SMB1CN0_SI = 0xC0^0;  
  sbit SMB1CN0_ACK = 0xC0^1;  
  sbit SMB1CN0_ARBLOST = 0xC0^2;  
  sbit SMB1CN0_ACKRQ = 0xC0^3;  
  sbit SMB1CN0_STO = 0xC0^4;  
  sbit SMB1CN0_STA = 0xC0^5;  
  sbit SMB1CN0_TXMODE = 0xC0^6;  
  sbit SMB1CN0_MASTER = 0xC0^7;  
 
 
 
  sbit SPI0CN0_SPIEN = 0xF8^0;  
  sbit SPI0CN0_TXBMT = 0xF8^1;  
  sbit SPI0CN0_NSSMD0 = 0xF8^2;  
  sbit SPI0CN0_NSSMD1 = 0xF8^3;  
  sbit SPI0CN0_RXOVRN = 0xF8^4;  
  sbit SPI0CN0_MODF = 0xF8^5;  
  sbit SPI0CN0_WCOL = 0xF8^6;  
  sbit SPI0CN0_SPIF = 0xF8^7;  
 
 
 
  sbit TCON_IT0 = 0x88^0;  
  sbit TCON_IE0 = 0x88^1;  
  sbit TCON_IT1 = 0x88^2;  
  sbit TCON_IE1 = 0x88^3;  
  sbit TCON_TR0 = 0x88^4;  
  sbit TCON_TF0 = 0x88^5;  
  sbit TCON_TR1 = 0x88^6;  
  sbit TCON_TF1 = 0x88^7;  
 
 
 
  sbit TMR2CN0_T2XCLK = 0xC8^0;  
  sbit TMR2CN0_T2CSS = 0xC8^1;  
  sbit TMR2CN0_TR2 = 0xC8^2;  
  sbit TMR2CN0_T2SPLIT = 0xC8^3;  
  sbit TMR2CN0_TF2CEN = 0xC8^4;  
  sbit TMR2CN0_TF2LEN = 0xC8^5;  
  sbit TMR2CN0_TF2L = 0xC8^6;  
  sbit TMR2CN0_TF2H = 0xC8^7;  
 
 
 
  sbit TMR5CN0_T5XCLK = 0xC8^0;  
  sbit TMR5CN0_TR5 = 0xC8^2;  
  sbit TMR5CN0_T5SPLIT = 0xC8^3;  
  sbit TMR5CN0_TF5LEN = 0xC8^5;  
  sbit TMR5CN0_TF5L = 0xC8^6;  
  sbit TMR5CN0_TF5H = 0xC8^7;  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 453 "\PgmCard\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Defs.h" /1
 
 
 
 
#line 457 "\PgmCard\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Defs.h" /0
 
 
 
 
#line 21 "..\..\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Register_Enums.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 5 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /0
 
 
  
#line 1 "C:\Keil_v5\C51\Inc\limits.h" /0







 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 7 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 typedef       	signed char   sChar;
 typedef       unsigned char   uChar;
 typedef         signed char   sChar_t;
 typedef       unsigned char   uChar_t;
 
 typedef         signed char* 	sString;
 typedef       unsigned char* 	uString;
 typedef         signed char* 	sString_t;
 typedef       unsigned char* 	uString_t;
 
 typedef       	signed char*  STR;
 typedef const   signed char*  CSTR;
 
 typedef         signed char*  AscString;
 typedef const   signed char*  CAscString;
 
 
 
 
 
#line 4 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "..\..\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Register_Enums.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 18 "..\..\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Register_Enums.h" /1
  
 
 
  
 
 
 
  
  
  
 
  
 
 
  
  
 
 
 
 
  
  
  
  
  
  
  
 
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
  
  
  
 
 
  
 
 
 
 
 
 
 
  
  
  
  
 
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
 
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
 
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
 
  
 
 
 
 
 
  
  
 
 
 
 
  
  
  
 
 
  
 
  
 
  
 
  
 
 
 
  
  
  
 
  
 
 
  
  
  
 
  
 
  
 
  
 
  
 
  
 
  
 
 
 
 
 
  
  
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
 
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
 
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
 
 
 
 
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
 
 
  
 
 
  
 
 
  
 
 
  
 
 
  
 
 
  
 
 
  
 
 
 
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
 
  
 
  
 
 
 
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
 
  
 
  
 
  
 
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
  
  
 
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
  
  
  
  
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
 
  
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
  
  
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
 
  
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
  
  
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
  
  
  
  
 
 
 
 
  
  
  
 
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
  
 
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
  
  
 
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
 
 
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
 
  
 
 
  
  
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
 
  
 
 
 
 
 
  
  
  
  
  
  
 
  
  
  
 
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
 
 
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
  
 
 
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
 
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
 
  
 
  
  
  
 
  
 
  
  
  
 
  
 
 
 
 
  
  
  
  
 
  
  
  
 
  
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
  
  
  
 
 
  
  
  
 
  
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
 
 
 
  
  
 
  
  
  
  
 
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
 
  
 
 
  
  
  
  
 
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
 
 
 
 
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
 
  
 
 
 
  
  
  
  
 
 
 
 
  
  
 
 
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
 
  
  
  
  
  
  
 
  
  
  
 
 
  
 
 
 
  
  
  
 
  
 
 
  
  
  
 
  
 
 
 
 
 
  
  
  
  
 
  
  
  
  
 
 
 
 
  
  
  
  
 
 
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
  
  
 
  
 
 
 
  
  
  
  
 
  
  
  
 
  
 
 
  
  
  
  
 
 
 
 
  
  
  
  
 
  
 
  
 
 
  
  
  
 
 
  
 
 
 
 
 
 
 
 
  
 
 
 
 
 
  
 
 
  
  
  
  
 
 
  
  
  
 
  
 
 
 
 
 
 
 
 
 
  
  
 
 
 
 
  
  
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
  
  
 
 
#line 3987 "..\..\SdkTool\EFM8UB2\Inc\SI_EFM8UB2_Register_Enums.h" /0
 
 
#line 5 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
 
  
#line 1 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
 
 
 
  
#line 1 "\PgmCard\SrcCode\Bsp\Inc\TypeDef.h" /0
 
#line 2 "\PgmCard\SrcCode\Bsp\Inc\TypeDef.h" /1
  
 
  
  
 
  
 
  
  
 
  
  
 
  
  
 
  
  
 
  
  
  
 
  
 
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 4 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
#line 4 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
 
 
 
  sbit LCD_RS = 0x80^2;
  sbit LCD_RST = 0x90^3;
 
  sbit LCD_CS = 0x80^6;
  sbit LCD_SCK = 0x80^3;
  sbit LCD_SDA = 0x80^5;
 
 
  sbit BtnEntGpio = 0x80^0;
  sbit BtnExtGpio = 0x80^1;
 
  sbit BtnUpGpio = 0x90^4;
  sbit BtnDwGpio = 0x90^5;
 
  sbit RC_OUT = 0x80^4;          
 
 
 
#line 7 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Logic\Inc\AppDef.h" /0
 
 
 
  
#line 1 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /0
 
#line 2 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /1
  
 
  
  
 
  
 
  
  
 
  
  
 
  
  
 
  
  
 
  
  
  
 
  
 
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 4 "\PgmCard\SrcCode\Logic\Inc\AppDef.h" /0
#line 4 "\PgmCard\SrcCode\Logic\Inc\AppDef.h" /0
 
 
 typedef enum{
 LNG_CHS = 0x00,
 LNG_ENG = 0x01,
 }LngDef, LngTypeDef;
 
 typedef struct{   
 int16_t Mark;					                      
 
 int16_t Version;                             
 
 int16_t LightSw;                             
 int16_t LightTim;			                       
 int16_t Contrast;			                       
 
 int16_t Language;			                       
 }TxSysDef, TxSysTypeDef;
 
 
 
#line 8 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "..\..\SrcCode\Bsp\Inc\InitDevice.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 extern void enter_DefaultMode_from_RESET(void);
 
 
 
 extern void PCA_0_enter_DefaultMode_from_RESET(void);
 extern void PCACH_0_enter_DefaultMode_from_RESET(void);
 extern void PCACH_4_enter_DefaultMode_from_RESET(void);
 extern void PORTS_0_enter_DefaultMode_from_RESET(void);
 extern void PORTS_1_enter_DefaultMode_from_RESET(void);
 extern void PORTS_2_enter_DefaultMode_from_RESET(void);
 extern void PBCFG_0_enter_DefaultMode_from_RESET(void);
 extern void ADC_0_enter_DefaultMode_from_RESET(void);
 extern void HFOSC_0_enter_DefaultMode_from_RESET(void);
 extern void CLOCK_0_enter_DefaultMode_from_RESET(void);
 extern void TIMER01_0_enter_DefaultMode_from_RESET(void);
 extern void TIMER16_2_enter_DefaultMode_from_RESET(void);
 extern void TIMER16_3_enter_DefaultMode_from_RESET(void);
 extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void);
 extern void UARTE_1_enter_DefaultMode_from_RESET(void);
 extern void EXTINT_0_enter_DefaultMode_from_RESET(void);
 extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void);
 
 
 
 
 
#line 9 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
 
  
#line 1 "..\..\SrcCode\Middle\Input\Inc\InputBtn.h" /0
 
 
 
  
#line 1 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
#line 2 "..\..\SrcCode\Logic\Inc\Global.h" /1
  
 
  
  
 
  
  
  
 
  
  
 
  
  
  
  
 
  
 
  
  
 
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
  
  
 
  
  
  
  
 
  
 
  
 
  
  
  
  
 
  
  
  
 
  
  
  
 
  
  
  
 
  
  
 
  
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 4 "..\..\SrcCode\Middle\Input\Inc\InputBtn.h" /0
#line 4 "..\..\SrcCode\Middle\Input\Inc\InputBtn.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Middle\Input\Inc\InputBtnBsp.h" /0
 
 
 
  
#line 1 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
 
#line 2 "..\..\SrcCode\Bsp\Inc\ReMap.h" /1
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 24 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
 
#line 4 "\PgmCard\SrcCode\Middle\Input\Inc\InputBtnBsp.h" /0
 
 
 
 
 
 
 
 
 extern uint8_t BtnGetState(uint8_t IdxBtn);
 
 
#line 5 "..\..\SrcCode\Middle\Input\Inc\InputBtn.h" /0
 
 
 
 
 
 
 
 
 extern void BtnDatInit(void);
 
 extern void BtnScanHandle(void);
 
 extern void BtnFlush(void);
 extern void BtnStopCnt(void);
 extern void BtnClearDown(uint8_t BtnMask);
 extern uint8_t BtnTstStat(uint8_t BtnMask);
 extern uint8_t BtnTstDown(uint8_t BtnMask);
 extern uint8_t BtnTstHold(uint8_t BtnMask);
 
 
#line 11 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
 
#line 2 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /1
  
 
  
  
  
  
 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 12 "..\..\SrcCode\Logic\Inc\Global.h" /0
#line 12 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
 
  
#line 1 "\PgmCard\SrcCode\Logic\Inc\Esc.h" /0
 
 
 
 
 
 
 extern void EscDetect(void);
 
 
#line 14 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Logic\Inc\Battery.h" /0
 
 
 
 extern void LipoCellsProcessHandle(void);
 extern void LipoCellsDatInit(void);
 extern void LipoCellsDetect(void);
 
 
#line 15 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Logic\Inc\Stablizer.h" /0
 
 
 
 
 
 
 extern void StablizerDatInit(void);
 extern void StablizerDetect(void);
 extern void DetectChargeParameter(int16_t *p_data, uint8_t ArraySize);
 extern void StablizerProcessHandle(void);
 
 
#line 16 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Logic\Inc\Sterring.h" /0
 
 
 
 
 
 
 extern sint16_t  SterringParam[3];
 
 extern void SterringDatInit(void);
 extern void SterringDetect(void);
 extern void SterringProcessHandle(void);
 
 
#line 17 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 extern uint16_t data TickCnt1ms;
 extern uint16_t  SysTaskHandle;
 extern uint16_t  SysModuleEnable;
 
 extern TxSysDef  TxSys;
 
 extern uint8_t AdcCovOkFlag;
 extern uint8_t AdcCovEnTrigger;
 extern uint16_t  BatVoltage[9];           
 
 extern uint8_t  PgmStatus;
 extern int16_t  EscParam[24];
 extern int16_t  EscTxParam[24];
 
 extern uint8_t  RxTxStatue;
 extern int16_t  StabilizerParam[18];
 
 extern void EscDatInit(void);
 extern uint8_t EscDatCharge(int16_t *pDat, uint8_t DatSize);
 
 extern void SysDatInit(void);
 extern void DelayMs(uint16_t mTim);	
 
 
#line 4 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdDraw.h" /0
 
 
 
  
#line 1 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdBase.h" /0
 
 








 
  
#line 1 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
 
#line 2 "..\..\SrcCode\Bsp\Inc\ReMap.h" /1
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 24 "..\..\SrcCode\Bsp\Inc\ReMap.h" /0
 
#line 12 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdBase.h" /0
 
  
#line 1 "..\..\SrcCode\Logic\Inc\Global.h" /0
 
#line 2 "..\..\SrcCode\Logic\Inc\Global.h" /1
  
 
  
  
 
  
  
  
 
  
  
 
  
  
  
  
 
  
 
  
  
 
  
  
  
  
  
  
 
  
  
  
  
 
  
  
  
 
  
  
  
 
  
  
  
  
 
  
 
  
 
  
  
  
  
 
  
  
  
 
  
  
  
 
  
  
  
 
  
  
 
  
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 13 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdBase.h" /0
#line 13 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdBase.h" /0
 
  
#line 1 "\PgmCard\SrcCode\Middle\Gui\Inc\PageRes.h" /0
 
 
 
  
#line 1 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /0
 
#line 2 "..\..\SrcCode\Bsp\Inc\TypeDef.h" /1
  
 
  
  
 
  
 
  
  
 
  
  
 
  
  
 
  
  
 
  
  
  
 
  
 
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 4 "\PgmCard\SrcCode\Middle\Gui\Inc\PageRes.h" /0
#line 4 "\PgmCard\SrcCode\Middle\Gui\Inc\PageRes.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 extern uint8_t code AscFontTableMask[127*6];
 extern uint8_t code ChsFontTableMask[2*26];
 extern uint8_t code MinFontTableMask[50][4];
 
 extern uint8_t code PageMainBmp[1088];
 
 
#line 14 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdBase.h" /0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 extern void Lcd_Init(void);
 
 extern void Lcd_SetPage(uint8_t Page);
 extern void Lcd_SetColumn(uint8_t Column);
 extern void Lcd_SetPageColumn(uint8_t Page, uint8_t Column);
 
 extern void LcdWriteClr(uint8_t Bw);
 extern void LcdWriteDatLine(uint8_t Dat);
 extern void LcdWriteClrline(uint8_t nClr, uint8_t mDat);
 
 extern void LcdWriteAscChar(uint8_t iAsc, uint8_t mBw);
 extern void LcdWriteAscString(uint8_t iPage, uint8_t iColumn, uint8_t mBw, sString pString);
 
 extern void LcdDrawBufferRefresh(void);
 
 
#line 4 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdDraw.h" /0
 
  
#line 1 "C:\Keil_v5\C51\Inc\math.h" /0







 
 
 
 
 
 
#line 14 "C:\Keil_v5\C51\Inc\math.h" /1
 
  
 
 
 
  
 
 
 
 
 
 
 
 
#line 28 "C:\Keil_v5\C51\Inc\math.h" /0
 
 #pragma SAVE
 #pragma REGPARMS
 
 extern char  cabs  (char  val);
 extern int    abs  (int   val);
 extern long  labs  (long  val);
 
 
 extern float fabs  (float val);
 extern float sqrt  (float val);
 extern float exp   (float val);
 extern float log   (float val);
 extern float log10 (float val);
 extern float sin   (float val);
 extern float cos   (float val);
 extern float tan   (float val);
 extern float asin  (float val);
 extern float acos  (float val);
 extern float atan  (float val);
 extern float sinh  (float val);
 extern float cosh  (float val);
 extern float tanh  (float val);
 extern float atan2 (float y, float x);
 
 extern float ceil  (float val);
 extern float floor (float val);
 extern float modf  (float val, float *n);
 extern float fmod  (float x, float y);
 extern float pow   (float x, float y);
 
 
#line 60 "C:\Keil_v5\C51\Inc\math.h" /1
 
 
 
#line 63 "C:\Keil_v5\C51\Inc\math.h" /0
 
 #pragma RESTORE
 
 
#line 5 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdDraw.h" /0
 
  
#line 1 "C:\Keil_v5\C51\Inc\stdio.h" /0






 
 
 
 
 
 
 
 
 
 
#line 17 "C:\Keil_v5\C51\Inc\stdio.h" /1
  
 
#line 19 "C:\Keil_v5\C51\Inc\stdio.h" /0
 
 
 
 typedef unsigned int size_t;
 
 
 #pragma SAVE
 #pragma REGPARMS
 extern char _getkey (void);
 extern char getchar (void);
 extern char ungetchar (char);
 extern char putchar (char);
 extern int printf   (const char *, ...);
 extern int sprintf  (char *, const char *, ...);
 extern int vprintf  (const char *, char *);
 extern int vsprintf (char *, const char *, char *);
 extern char *gets (char *, int n);
 extern int scanf (const char *, ...);
 extern int sscanf (char *, const char *, ...);
 extern int puts (const char *);
 
 #pragma RESTORE
 
 
 
#line 6 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdDraw.h" /0
 
  
#line 1 "C:\Keil_v5\C51\Inc\string.h" /0







 
 
 
 
 
 
#line 14 "C:\Keil_v5\C51\Inc\string.h" /1
  
 
 
#line 17 "C:\Keil_v5\C51\Inc\string.h" /0
 
 
#line 19 "C:\Keil_v5\C51\Inc\string.h" /1
  
 
#line 21 "C:\Keil_v5\C51\Inc\string.h" /0
 
 #pragma SAVE
 #pragma REGPARMS
 extern char  *strcat  (char *s1, const char *s2);
 extern char  *strncat (char *s1, const char *s2, size_t n);
 
 extern char   strcmp  (const char *s1, const char *s2);
 extern char   strncmp (const char *s1, const char *s2, size_t n);
 
 extern char  *strcpy  (char *s1, const char *s2);
 extern char  *strncpy (char *s1, const char *s2, size_t n);
 
 extern size_t strlen  (const char *);
 
 extern char  *strchr  (const char *s, char c);
 extern int    strpos  (const char *s, char c);
 extern char  *strrchr (const char *s, char c);
 extern int    strrpos (const char *s, char c);
 
 extern size_t strspn  (const char *s, const char *set);
 extern size_t strcspn (const char *s, const char *set);
 extern char  *strpbrk (const char *s, const char *set);
 extern char  *strrpbrk(const char *s, const char *set);
 extern char  *strstr  (const char *s, const char *sub);
 extern char  *strtok  (char *str, const char *set);
 
 extern char   memcmp  (const void *s1, const void *s2, size_t n);
 extern void  *memcpy  (void *s1, const void *s2, size_t n);
 extern void  *memchr  (const void *s, char val, size_t n);
 extern void  *memccpy (void *s1, const void *s2, char val, size_t n);
 extern void  *memmove (void *s1, const void *s2, size_t n);
 extern void  *memset  (void *s, char val, size_t n);
 #pragma RESTORE
 
 
#line 7 "\PgmCard\SrcCode\Middle\Gui\Inc\LcdDraw.h" /0
 
 
 
 
 
 extern uint8_t  LcdBw;   
 
 extern void LcdDrawClr(uint8_t Bw);
 
 extern void LcdDrawPixelXY(uint16_t x, uint16_t y, uint16_t color);
 extern void LcdDrawHLine(uint16_t x1, uint16_t x2, uint16_t y, uint16_t color);
 extern void LcdDrawVLine(uint16_t x, uint16_t y1, uint16_t y2, uint16_t color);
 extern void LcdDrawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint16_t color);
 extern void LcdDrawRect(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint16_t color);
 
 extern void LcdDrawBmpToArray(uint16_t x, uint16_t y, uint8_t *pImageDat);
 extern void LcdDrawGeChar(uint16_t x, uint16_t y, uint8_t width, uint8_t yOffset, uint8_t height, uint8_t *pImageDat);
 
 extern void LcdDrawChsChar(uint16_t x, uint16_t y, uint16_t iChs);
 extern void LcdDrawAscChar(uint16_t x, uint16_t y, uint8_t iAsc);
 extern uint16_t LcdDrawTextString(uint16_t x, uint16_t y, uint8_t *pText);
 
 extern void LcdDrawInt(uint16_t x, uint16_t y, int16_t value, uint8_t n, uint8_t dot, uint8_t plus, uint8_t ar);
 
 extern void LcdDrawMiniBmp(uint16_t x, uint16_t y, uint8_t iTab);
 extern void LcdDrawMiniAsc(uint16_t x, uint16_t y, uint8_t *pAsc);
 extern void LcdDrawMiniInt(uint16_t x, uint16_t y, int16_t value, uint8_t n, uint8_t dot, uint8_t plus, uint8_t ar);
 
 extern void LcdDatInit(void);
 extern void LcdDrawInit(void);
 
 
#line 5 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
 
  
#line 1 "..\..\SrcCode\Middle\Input\Inc\InputBtn.h" /0
 
#line 2 "..\..\SrcCode\Middle\Input\Inc\InputBtn.h" /1
  
 
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
#line 6 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
#line 6 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
 
  
#line 1 "..\..\SrcCode\Logic\Inc\Stablizer.h" /0
 
#line 2 "..\..\SrcCode\Logic\Inc\Stablizer.h" /1
  
 
  
  
 
 
 
 
 
 
 
#line 7 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
#line 7 "..\..\SrcCode\Middle\Gui\Inc\Page.h" /0
 
 
 
 
 
 
 typedef enum{
 PD_TITLE  =	0x01,
 PD_LIST	  =	0x02,
 PD_IDX		= 0x04,
 PD_VALUE	= 0x08,
 PD_ALL		= 0xFF,
 }PdDef, PdTypeDef;
 
 typedef enum{
 PV_INIT	  =	0x01,				   
 PV_RUN    = 0x02,				   
 PV_END    = 0x04,				   
 PV_REDRAW	= 0x08,				   
 PV_PARAM	=	0x10,          
 }PvInitDef, PvInitTypeDef;
 
 typedef uint8_t (*PageFun)(uint8_t Event);
 
 typedef struct{
 uint8_t     Init;	         
 uint8_t     DrawMask,      
 Focus,         
 Start,         
 Total;         
 uint8_t     ItemEdit; 		 
 }MenuStat, MenuStatDef, MenuStatTypeDef;
 
 typedef struct{
 sString			Title;			   
 PageFun			SubItem;		   
 sString		*	ValueList;		 
 int16_t			Min, Max;		   
 int16_t	 	* pValue;			   
 uint8_t    	Data;			     
 sString			Text;				   
 }MenuItem, MenuItemDef, MenuItemTypeDef;
 
 
 extern uint8_t data PageStackIdx;
 extern PageFun data PageStack[3];
 
 extern void PageInit(PageFun Page, uint8_t Msg);
 extern void PageGoto(PageFun Page, uint8_t Msg);
 extern void PageEnter(PageFun Page, uint8_t Msg);
 extern void PageReturn(uint8_t Msg);
 
 extern void PageMenuStatDatInit(void);
 
 extern void PageMenuProc(MenuItem *pmi, MenuStat *pms);
 
 extern uint8_t PageEscParam(uint8_t event); 
 
 extern uint8_t PageEsc1th(uint8_t event);
 extern uint8_t PageEsc2th(uint8_t event);
 extern uint8_t PageEsc3th(uint8_t event);
 
 extern uint8_t PageEsc1thRst(uint8_t event);
 extern uint8_t PageEsc2thRst(uint8_t event);
 extern uint8_t PageEsc3thRst(uint8_t event);
 extern uint8_t PageEsc3thAbout(uint8_t event);
 
 extern uint8_t PageAutoFly(uint8_t event);
 
 extern uint8_t PageAutoFlyMode(uint8_t event);
 extern uint8_t PageStablizerBuild(uint8_t event);
 extern uint8_t PageAutoFlyYawGain(uint8_t event);
 extern uint8_t PageAutoFlyRollGain(uint8_t event);
 extern uint8_t PageAutoFlyPitchGain(uint8_t event);
 
 extern uint8_t PageBatVolt(uint8_t event);
 
 extern uint8_t PageSterring(uint8_t event);
 
 extern MenuStat  EscMs;
 
 extern MenuStat  Esc1thMs;
 extern MenuStat  Esc2thMs;
 extern MenuStat  Esc3thMs;
 
 extern MenuStat  AutoFlyMs;
 extern MenuStat  AutoFlyModeMs;
 extern MenuStat  AutoFlyYawGainMs;
 extern MenuStat  AutoFlyRollGainMs;
 extern MenuStat  AutoFlyPitchGainMs;
 
 extern MenuStat  LipoCellsEscMs;
 
 extern MenuStat  SterringMs;
 
 
 
#line 1 "..\..\SrcCode\Middle\Gui\Page\PageLipoCells.c" /0
 
 
 
 MenuStat  LipoCellsEscMs;
 
 uint8_t PageBatVolt(uint8_t event)
 {
 if(event == PV_INIT){
 LcdDrawClr(0);
 if(!LipoCellsEscMs.Init){
 LipoCellsEscMs.ItemEdit = LipoCellsEscMs.Focus = LipoCellsEscMs.Start = 0;
 LipoCellsEscMs.Total = 0;
 LipoCellsEscMs.Init = 1;
 }
 LipoCellsEscMs.DrawMask = PD_ALL;
 return 1;
 }else if(event == PV_RUN){
 if(AdcCovOkFlag != 0){
 AdcCovOkFlag = 0x0;
 LipoCellsEscMs.DrawMask |= PD_VALUE;
 }      
 }
 
 if(LipoCellsEscMs.DrawMask){
 if(LipoCellsEscMs.DrawMask&PD_TITLE){		
 LcdDrawRect(0, 0, 128-1, 12, 0); 
 
 if(TxSys.Language == LNG_CHS){
 LcdDrawTextString(3, 0, "LiPo Cells Voltage");
 }else if(TxSys.Language == LNG_ENG){
 LcdDrawTextString(3, 0, "LiPo Cells Voltage");
 }
 LcdDrawHLine(0, 128-1, 12, 1);
 }
 
 if(LipoCellsEscMs.DrawMask&PD_LIST){
 LcdDrawTextString(0, 13, "1st:     V"); LcdDrawTextString((uint16_t)(128/2), 13, "2nd:     V");
 LcdDrawTextString(0, 23, "3rd:     V"); LcdDrawTextString((uint16_t)(128/2), 23, "4th:     V");
 LcdDrawTextString(0, 33, "5th:     V"); LcdDrawTextString((uint16_t)(128/2), 33, "6th:     V");      
 LcdDrawTextString(0, 43, "7th:     V"); LcdDrawTextString((uint16_t)(128/2), 43, "8th:     V");
 LcdDrawTextString(0, 53, "Total Cell:      V"); 
 }
 
 if(LipoCellsEscMs.DrawMask&PD_VALUE){
 LcdDrawInt(30, 13, BatVoltage[0]/10, 0, 2, 0xFF, 0); LcdDrawInt((uint16_t)(30+128/2), 13, BatVoltage[1]/10, 0, 2, 0xFF, 0); 
 LcdDrawInt(30, 23, BatVoltage[2]/10, 0, 2, 0xFF, 0); LcdDrawInt((uint16_t)(30+128/2), 23, BatVoltage[3]/10, 0, 2, 0xFF, 0); 
 LcdDrawInt(30, 33, BatVoltage[4]/10, 0, 2, 0xFF, 0); LcdDrawInt((uint16_t)(30+128/2), 33, BatVoltage[5]/10, 0, 2, 0xFF, 0); 
 LcdDrawInt(30, 43, BatVoltage[6]/10, 0, 2, 0xFF, 0); LcdDrawInt((uint16_t)(30+128/2), 43, BatVoltage[7]/10, 0, 2, 0xFF, 0); 
 LcdDrawInt(70, 53, BatVoltage[8]/10, 4, 2, 0xFF, 0);
 }  
 
 LipoCellsEscMs.DrawMask = 0;
 LcdDrawBufferRefresh();
 AdcCovEnTrigger = 0x1;
 }
 
 if(BtnTstDown(((uint8_t)(0x08)))||BtnTstDown(((uint8_t)(0x04)))){
 PageReturn(PV_INIT);
 }
 return 0;
 }
